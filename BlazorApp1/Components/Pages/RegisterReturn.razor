@page "/register-return/{Id:long=0}"
@using BlazorApp1.Data
@using BlazorApp1.Entities
@using BlazorApp1.Services
@using Microsoft.EntityFrameworkCore
@using System.ComponentModel.DataAnnotations
@using static BlazorApp1.Components.Pages.RegisterShipment
@using static BlazorApp1.Components.PersianDatePicker
@inject NavigationManager navigationManager
@inject AppDbContext dbContext
@inject ISnackbar Snackbar

<PageTitle>ویرایش خروجی</PageTitle>

<h3>EditShipment</h3>

<MudRTLProvider RightToLeft="true">
    <MudForm @ref=form @bind-IsValid=success @bind-Errors=errors>
        <MudContainer>
            <MudGrid>
                <MudItem xs="4" sm="6" md="4">
                    <MudNumericField Class="mt-5" @bind-Value="shipment.InvoiceCount" Label="تعداد فاکتورها" Disabled=true ReadOnly=true Variant="Variant.Outlined" Min="0"
                    ErrorText="لطفا تعداد فاکتورها را وارد کنید" />

                    <MudNumericField Class="mt-5" @bind-Value="shipment.InvoiceAmount" Label="جمع ریال فاکتورها" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" DebounceInterval="0" Immediate=true Min="0" ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />

                    <MudStack Row=true AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                        <MudText Typo="Typo.h6">سرویس دوم</MudText>
                    </MudStack>
                    <MudNumericField @bind-Value="shipment.SecondServiceInvoiceCount" Label="تعداد فاکتورها" Disabled=true ReadOnly=true Variant="Variant.Outlined" Min="0" ErrorText="لطفا تعداد فاکتورها را وارد کنید" />
                    <MudNumericField Class="mt-5" @bind-Value="shipment.SecondServiceInvoiceAmount" Label="جمع ریال فاکتورها" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" Immediate=true Min="0"
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />
                    <MudStack Row=true AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                        <MudText Typo="Typo.h6">سرویس سوم</MudText>
                    </MudStack>
                    <MudNumericField @bind-Value="shipment.ThirdServiceInvoiceCount" Label="تعداد فاکتورها" Disabled=true ReadOnly=true Variant="Variant.Outlined" Min="0" ErrorText="لطفا تعداد فاکتورها را وارد کنید" />
                    <MudNumericField Class="mt-5" @bind-Value="shipment.ThirdServiceInvoiceAmount" Label="جمع ریال فاکتورها" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" Immediate=true Min="0"
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />

                </MudItem>
                <MudItem xs="12" sm="6" md="4">
                    <MudNumericField Class="mt-5" @bind-Value="returnInvoiceCount" Label="تعداد فاکتورهای مرجوعی"  Variant="Variant.Outlined" Immediate=true Min="0" Max="shipment.InvoiceCount"
                    ErrorText="لطفا تعداد فاکتورها را وارد کنید" Disabled="shipment.InvoiceCount==null" />

                    <MudNumericField Class="mt-5" @bind-Value="returnInvoiceAmount" Label="جمع ریال فاکتورهای مرجوعی" Variant="Variant.Outlined" Format="N0" DebounceInterval="0" Immediate=true Min="0" Max="shipment.InvoiceAmount" ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" Disabled="shipment.InvoiceCount==null" />

                    <MudStack Row=true AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                        <MudText Typo="Typo.h6">سرویس دوم</MudText>
                    </MudStack>

                    <MudNumericField @bind-Value="secondReturnInvoiceCount" Label="تعداد فاکتورهای مرجوعی" Variant="Variant.Outlined" Immediate=true Min="0" Max="shipment.SecondServiceInvoiceCount??0" ErrorText="لطفا تعداد فاکتورها را وارد کنید" Disabled="shipment.SecondServiceInvoiceCount==null" />

                    <MudNumericField Class="mt-5" @bind-Value="secondReturnInvoiceAmount" Label="جمع ریال فاکتورهای مرجوعی" Variant="Variant.Outlined" Format="N0" Immediate=true Min="0" Max="shipment.SecondServiceInvoiceAmount??0" Disabled=@(shipment.SecondServiceInvoiceCount==null)
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />

                    <MudStack Row=true AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                        <MudText Typo="Typo.h6">سرویس سوم</MudText>
                    </MudStack>

                    <MudNumericField @bind-Value="thirdReturnInvoiceCount" Label="تعداد فاکتورهای مرجوعی" Variant="Variant.Outlined" Immediate=true Min="0" Max="shipment.ThirdServiceInvoiceCount??0" ErrorText="لطفا تعداد فاکتورها را وارد کنید" Disabled=@(shipment.ThirdServiceInvoiceCount==null) />

                    <MudNumericField Class="mt-5" @bind-Value="thirdReturnInvoiceAmount" Label="جمع ریال فاکتورهای مرجوعی" Variant="Variant.Outlined" Format="N0" Immediate=true Min="0" Max="shipment.ThirdServiceInvoiceAmount??0" Disabled=@(shipment.ThirdServiceInvoiceCount==null )
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />
                </MudItem>







                <MudItem xs="12" sm="6" md="4">
                    <MudNumericField Class="mt-5" Value="NetInvoiceCount" Label="تعداد خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Min="0"
                    ErrorText="لطفا تعداد فاکتورها را وارد کنید" />

                    <MudNumericField Class="mt-5" Value="NetInvoiceAmount" Label="ریال خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" DebounceInterval="0" Immediate=true Min="0" ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />

                    <MudStack Row=true AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                        <MudText Typo="Typo.h6">سرویس دوم</MudText>
                    </MudStack>

                    <MudNumericField Value="SecondServiceNetInvoiceCount" Label="تعداد خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Min="0" ErrorText="لطفا تعداد فاکتورها را وارد کنید" />

                    <MudNumericField Class="mt-5" Value="SecondServiceNetInvoiceAmount" Label="ریال خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" Immediate=true Min="0"
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />

                    <MudStack Row=true AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                        <MudText Typo="Typo.h6">سرویس سوم</MudText>
                    </MudStack>

                    <MudNumericField Value="ThirdServiceNetInvoiceCount" Label="تعداد خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Min="0" ErrorText="لطفا تعداد فاکتورها را وارد کنید" />

                    <MudNumericField Class="mt-5" Value="ThirdServiceNetInvoiceAmount" Label="ریال خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" Immediate=true Min="0"
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />

                    <MudNumericField Class="mt-5" Value="TotalNetInvoiceCount" Label="تعداد خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" Immediate=true Min="0"
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />

                    <MudNumericField Class="mt-5" Value="TotalNetInvoiceAmount" Label="ریال خالص" Disabled=true ReadOnly=true Variant="Variant.Outlined" Format="N0" Immediate=true Min="0"
                    ErrorText="لطفا جمع ریال فاکتورها را وارد کنید" />
                </MudItem>

                <MudStack Class="mt-5" Row=true AlignItems="AlignItems.Center" Justify="Justify.Center" Spacing="1">
                    <MudButton Variant="Variant.Filled" Color="Color.Error" onclick="ClearForm"><MudText Typo="Typo.h6">پاک کردن</MudText></MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick=Cancel><MudText Typo="Typo.h6">انصراف</MudText></MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick=AddShipmentToList  ButtonType=ButtonType.Submit><MudText Typo="Typo.h6">ذخیره</MudText></MudButton>
                </MudStack>
            </MudGrid>
        </MudContainer>
    </MudForm>
</MudRTLProvider>

<style>
    .same-height {
    height: 56px;
    }

    .item-template {
    font-size: 1.2rem;
    padding: 8px 16px;
    text-align: center;
    font-family: 'Iranian Sans', sans-serif;
    }

    .autocomplete-container, .autocomplete-container * {
    text-align: center;
    font-size: 1.2rem;
    font-family: 'Iranian Sans', sans-serif;
    }

    .align-center {
    display: flex;
    align-items: center;
    }
</style>

@code {
    [Parameter] public long Id { get; set; }
    private MudForm form;
    private Shipment shipment;
    private bool success = false;
    private string[] errors = [];

    private int? returnInvoiceCount { get; set; } = 0;
    private long? returnInvoiceAmount { get; set; } = 0;
    private int? secondReturnInvoiceCount { get; set; }
    private int? thirdReturnInvoiceCount { get; set; }
    private long? secondReturnInvoiceAmount { get; set; }
    private long? thirdReturnInvoiceAmount { get; set; }

    public int? NetInvoiceCount => (shipment.InvoiceCount ?? null) - (returnInvoiceCount ?? 0);
    public int? SecondServiceNetInvoiceCount => (shipment.SecondServiceInvoiceCount ?? null) - (secondReturnInvoiceCount ?? 0);
    public int? ThirdServiceNetInvoiceCount => (shipment.ThirdServiceInvoiceCount ?? null) - (thirdReturnInvoiceCount ?? 0);
    public long? NetInvoiceAmount => (shipment.InvoiceAmount ?? 0) - (returnInvoiceAmount ?? null);
    public long? SecondServiceNetInvoiceAmount => (shipment.SecondServiceInvoiceAmount ?? null) - (secondReturnInvoiceAmount ?? 0);
    public long? ThirdServiceNetInvoiceAmount => (shipment.ThirdServiceInvoiceAmount ?? null) - (thirdReturnInvoiceAmount ?? 0);

    public long TotalNetInvoiceCount => NetInvoiceCount ?? 0 + SecondServiceNetInvoiceCount ?? 0 + ThirdServiceNetInvoiceCount ?? 0;
    public long TotalNetInvoiceAmount => NetInvoiceAmount ?? 0 + SecondServiceNetInvoiceAmount ?? 0 + ThirdServiceNetInvoiceAmount ?? 0;

    private async Task LoadShipment()
    {
        shipment = await dbContext.Shipments.FirstOrDefaultAsync(s => s.Id == Id) ?? new();
    }


    protected override async Task OnInitializedAsync()
    {
        await LoadShipment();

        secondReturnInvoiceCount = shipment.SecondServiceInvoiceCount == null ? null : 0;
        thirdReturnInvoiceCount = shipment.ThirdServiceInvoiceCount == null ? null : 0;
        secondReturnInvoiceAmount = shipment.SecondServiceInvoiceAmount == null ? null : 0;
        thirdReturnInvoiceAmount = shipment.ThirdServiceInvoiceAmount == null ? null : 0;
    }

    private void Cancel() => navigationManager.NavigateTo("/");

    private async Task ClearForm()
    {
        await OnInitializedAsync();
    }

    private async Task AddShipmentToList()
    {
        if (form is not null)
            await form.Validate();

        if (!form!.IsValid)
            return;

        shipment.ReturnInvoiceCount = returnInvoiceCount ?? 0 + secondReturnInvoiceCount ?? 0 + thirdReturnInvoiceCount ?? 0;
        shipment.ReturnInvoiceAmount = returnInvoiceAmount ?? 0 + secondReturnInvoiceAmount ?? 0 + thirdReturnInvoiceAmount ?? 0;

        if (shipment.ReturnInvoiceCount == 0)
            shipment.ReturnInvoiceCount = null;

        if (shipment.ReturnInvoiceAmount == 0)
            shipment.ReturnInvoiceAmount = null;

        var changedRowCount = await dbContext.SaveChangesAsync();

        if (changedRowCount > 0)
            Cancel();
    }
}